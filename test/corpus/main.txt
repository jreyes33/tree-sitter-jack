====================================
Bare class
====================================

class Bare {
}

---

(class_declaration
  (identifier)
  (class_body))

====================================
Hello, world!
====================================

class Main {
  /**
   * Block comment
   */
  function void main() {
    do Output.printString("Hello, world!");
    do Output.println(); // New line
    return;
  }
}

---

(class_declaration
  (identifier)
  (class_body
    (comment)
    (function_declaration
      (return_type)
      (identifier)
      (parameter_list)
      (subroutine_body
        (statements
          (do_statement
            (subroutine_call
              (member_expression (identifier) (identifier))
              (expression_list (expression (term (string_constant))))))
          (do_statement
            (subroutine_call
              (member_expression (identifier) (identifier))
              (expression_list)))
          (comment)
          (return_statement))))))

====================================
Local variables
====================================

class Main {
  function void main() {
    var int i, j;
    var boolean a;
    let i = 0;
    let j = i;
    let a = false;
    return;
  }
}

---

(class_declaration
  (identifier)
  (class_body
    (function_declaration
      (return_type)
      (identifier)
      (parameter_list)
      (subroutine_body
        (var_declaration (type) (identifier) (identifier))
        (var_declaration (type) (identifier))
        (statements
          (let_statement (identifier) (expression (term (integer_constant))))
          (let_statement (identifier) (expression (term (identifier))))
          (let_statement (identifier) (expression (term (keyword_constant))))
          (return_statement))))))

====================================
Static and instance variables
====================================

class Dog {
  field int age, teeth;
  static boolean builtOnce;

  constructor Dog new(int ageParam, int teethParam) {
    let age = ageParam;
    let teeth = teethParam;
    let builtOnce = true;
    return this;
  }
}

---

(class_declaration
  (identifier)
  (class_body
    (field_declaration (type) (identifier) (identifier))
    (static_declaration (type) (identifier))
    (constructor_declaration
      (return_type (type (identifier)))
      (identifier)
      (parameter_list (parameter (type) (identifier)) (parameter (type) (identifier)))
      (subroutine_body
        (statements
          (let_statement (identifier) (expression (term (identifier))))
          (let_statement (identifier) (expression (term (identifier))))
          (let_statement (identifier) (expression (term (keyword_constant))))
          (return_statement (expression (term (keyword_constant)))))))))

====================================
Method declaration
====================================

class Cat {
  method String meow() {
    return "Meow";
  }
}

---

(class_declaration
  (identifier)
  (class_body
    (method_declaration
      (return_type (type (identifier)))
      (identifier)
      (parameter_list)
      (subroutine_body
        (statements
          (return_statement (expression (term (string_constant)))))))))

====================================
If, if-else, and while statements
====================================

class Main {
  function void main() {
    if (true) {
      return;
    }
    if (true) {
      return;
    } else {
      return;
    }
    while (true) {
      return;
    }
    return;
  }
}

---

(class_declaration
  (identifier)
  (class_body
    (function_declaration
      (return_type)
      (identifier)
      (parameter_list)
      (subroutine_body
        (statements
          (if_statement
            (expression (term (keyword_constant)))
            (statements (return_statement)))
          (if_statement
            (expression (term (keyword_constant)))
            (statements (return_statement))
            (statements (return_statement)))
          (while_statement
            (expression (term (keyword_constant)))
            (statements (return_statement)))
          (return_statement))))))
